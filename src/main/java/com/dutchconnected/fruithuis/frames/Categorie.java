/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.dutchconnected.fruithuis.frames;

import com.dutchconnected.fruithuis.Category;
import com.dutchconnected.fruithuis.User;
import java.awt.CardLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;
import org.hibernate.Session;
import org.hibernate.SessionFactory;

/**
 *
 * @author sha_y_000
 */
public class Categorie extends javax.swing.JFrame {

	private final SessionFactory factory;
	private User user;
        private final List<Category> everything;
        private final List<CategoryPanel> panels = new ArrayList<>();

    public Categorie(SessionFactory factory) {
        this.factory = factory;
		initComponents();
                try(Session s = factory.openSession()) {
                everything = Category.CRUD.selectAll(s).list();
                everything.stream().map(CategoryPanel::new).peek(this::addListeners).peek(panels::add).forEach(catHolder::add);
                        }
                productOverzicht1.setBuyFunction(winkelwagen::addProduct);
                
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        panelButton = new javax.swing.JButton();
        logoutButton = new javax.swing.JButton();
        winkelwagen = new com.dutchconnected.fruithuis.frames.Winkelwagen();
        jLabel25 = new javax.swing.JLabel();
        useroptions = new javax.swing.JPanel();
        loginButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(600, 0), new java.awt.Dimension(600, 0), new java.awt.Dimension(600, 32767));
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 460), new java.awt.Dimension(0, 460), new java.awt.Dimension(32767, 460));
        basePane = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        catHolder = new javax.swing.JPanel();
        productOverzicht1 = new com.dutchconnected.fruithuis.frames.ProductOverzicht();

        panelButton.setText("adminPanel");
        panelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                panelButtonActionPerformed(evt);
            }
        });

        logoutButton.setText("Uitloggen");
        logoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutButtonActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Categorie overzicht");
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jLabel25.setText("Categorie");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.ABOVE_BASELINE_LEADING;
        getContentPane().add(jLabel25, gridBagConstraints);

        loginButton.setText("Login");
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });
        useroptions.add(loginButton);

        jButton1.setText("winkelwagen");
        useroptions.add(jButton1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        getContentPane().add(useroptions, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 4;
        getContentPane().add(filler1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        getContentPane().add(filler2, gridBagConstraints);

        basePane.setLayout(new java.awt.CardLayout());

        jScrollPane1.setViewportView(catHolder);

        basePane.add(jScrollPane1, "all");
        basePane.add(productOverzicht1, "products");

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        getContentPane().add(basePane, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
        LoginForm window = new LoginForm(this, factory);
		window.setVisible(true);
		user = window.getUser();
		System.out.println(user);
		if (user != null) {
			useroptions.add(logoutButton);
			useroptions.remove(loginButton);
			if (user.getId() == 1) {
				useroptions.add(panelButton);
				useroptions.invalidate();
				useroptions.revalidate();
			} else {
				useroptions.remove(panelButton);
			}
		} else {
			useroptions.add(loginButton);

		}
    }//GEN-LAST:event_loginButtonActionPerformed

    private void panelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_panelButtonActionPerformed
        new Administrator(factory).setVisible(true);
        try(Session s = factory.openSession()) {
            panels.forEach(this::remove);
            panels.clear();
            everything.clear();
                everything.addAll(Category.CRUD.selectAll(s).list());
                everything.stream().map(CategoryPanel::new).peek(this::addListeners).peek(panels::add).forEach(catHolder::add);
                        }
    }//GEN-LAST:event_panelButtonActionPerformed

    private void logoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutButtonActionPerformed
        useroptions.remove(panelButton);
		useroptions.add(loginButton);
		useroptions.remove(logoutButton);
    }//GEN-LAST:event_logoutButtonActionPerformed

   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel basePane;
    private javax.swing.JPanel catHolder;
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler2;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton loginButton;
    private javax.swing.JButton logoutButton;
    private javax.swing.JButton panelButton;
    private com.dutchconnected.fruithuis.frames.ProductOverzicht productOverzicht1;
    private javax.swing.JPanel useroptions;
    private com.dutchconnected.fruithuis.frames.Winkelwagen winkelwagen;
    // End of variables declaration//GEN-END:variables



    private void addListeners(CategoryPanel panel) {
        
        panel.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
               try(Session s = factory.openSession()) {
                   Category category = panel.getCategory();
                   s.refresh(category);
                   productOverzicht1.setCategory(category);
                   ((CardLayout)basePane.getLayout()).show(basePane, "product");
               }
            }
        });
    }
}
