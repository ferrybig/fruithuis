/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.dutchconnected.fruithuis.frames;

import com.dutchconnected.fruithuis.Category;
import com.dutchconnected.fruithuis.Product;
import com.dutchconnected.fruithuis.ProductUnitUser;
import com.dutchconnected.fruithuis.Unit;
import java.awt.Graphics2D;
import java.awt.GridBagConstraints;
import java.awt.image.BufferedImage;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.util.HashSet;
import java.util.Set;
import java.util.function.BiConsumer;
import javax.imageio.ImageIO;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;

/**
 *
 * @author sha_y_000
 */
public class ProductFrame extends javax.swing.JPanel {

    private final Product product;
    private final BiConsumer<Product,Integer> buyFunction;

    /**
     * Creates new form Product
     * @param product
     */
    public ProductFrame(Product product, 
    BiConsumer<Product,Integer> buyFunction) {
        this.product = product;
        this.buyFunction = buyFunction;
        initComponents();       
        for(ProductUnitUser price : product.getPrice()) {
            JLabel label = new JLabel();
            label.setText("â‚¬" + price.getPriceForAmountOfProduct(price.getMinAmount())
                    + " voor " + price.getMinAmount() + " per " + price.getUnitId().getSmall());
            GridBagConstraints gb = new GridBagConstraints();
            gb.gridx = 0;
            gb.anchor = GridBagConstraints.WEST;
            this.priceList.add(label, gb);
        }
        image.setIcon(new ImageIcon(product.getImage()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        image = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        priceList = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jSpinner1 = new javax.swing.JSpinner();
        jComboBox1 = new javax.swing.JComboBox<>();

        setLayout(new java.awt.GridBagLayout());

        image.setBackground(new java.awt.Color(255, 102, 204));
        image.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 100;
        gridBagConstraints.ipady = 100;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 0.1;
        add(image, gridBagConstraints);

        jLabel1.setText(product.getName());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        add(jLabel1, gridBagConstraints);

        priceList.setMaximumSize(new java.awt.Dimension(200, 32767));
        priceList.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        add(priceList, gridBagConstraints);

        jButton1.setText("Kopen");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        add(jButton1, gridBagConstraints);

        jSpinner1.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        add(jSpinner1, gridBagConstraints);

        jComboBox1.setModel(new DefaultComboBoxModel<Unit>(this.product.getPrice().stream().map(ProductUnitUser::getUnitId).distinct().toArray(Unit[]::new))
        );
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        add(jComboBox1, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.buyFunction.accept(product, (Integer)jSpinner1.getValue());
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel image;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<Unit> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JPanel priceList;
    // End of variables declaration//GEN-END:variables

    
}
