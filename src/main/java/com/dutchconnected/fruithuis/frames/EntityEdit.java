/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.dutchconnected.fruithuis.frames;

import java.awt.GridBagConstraints;
import java.awt.Insets;
import java.awt.Window;
import java.util.List;
import java.util.function.BiConsumer;
import java.util.function.Supplier;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JComponent;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JSpinner;
import javax.swing.JTextField;
import javax.swing.SpinnerNumberModel;
import org.hibernate.Session;
import org.hibernate.SessionFactory;

/**
 *
 * @author admin
 */
public class EntityEdit<E> extends javax.swing.JDialog {

	private final SessionFactory connector;
	private final E entity;
	private final Crud<E> crud;
	private final Supplier<?>[] supplier;

	@SuppressWarnings("cast")
	public EntityEdit(Window p, SessionFactory connector, E entity, Crud<E> crud) {
		super(p);
		initComponents();
		this.title.setText(this.title.getText() + String.valueOf(entity));
		this.connector = connector;
		this.entity = entity;
		this.crud = crud;
		List<Crud<E>.Field<?>> fields = crud.getFields();
		this.supplier = new Supplier<?>[fields.size()];

		for (int i = 0; i < fields.size(); i++) {
			Crud<E>.Field<?> f = fields.get(i);
			JLabel label = new JLabel(f.getName());
			JComponent edit;
			Supplier<?> val;
			if (f.getSetter() == null) {
				JLabel s = new JLabel();
				s.setText(String.valueOf(f.getGetter().apply(entity)));
				val = null;
				edit = s;
			} else if (f.getType() == Integer.class || f.getType() == Integer.TYPE) {
				JSpinner s= new JSpinner();
				s.setModel(new SpinnerNumberModel(((Number) f.getGetter().apply(entity)), Integer.MIN_VALUE, Integer.MAX_VALUE, 1));
				val = () -> (int)s.getValue();
				edit = s;
			} else if (f.getType() == Short.class || f.getType() == Short.TYPE) {
				JSpinner s = new JSpinner();
				s.setModel(new SpinnerNumberModel(((Number) f.getGetter().apply(entity)), Short.MIN_VALUE, Short.MAX_VALUE, 1));
				val = () -> (short)s.getValue();
				edit = s;
			} else if (f.getType() == Byte.class || f.getType() == Byte.TYPE) {
				JSpinner s= new JSpinner();
				s.setModel(new SpinnerNumberModel(((Number) f.getGetter().apply(entity)), Byte.MIN_VALUE, Byte.MAX_VALUE, 1));
				val = () -> (byte)s.getValue();
				edit = s;
			} else if (f.getType() == String.class) {
				JTextField s= new JTextField();
				s.setText(String.valueOf(f.getGetter().apply(entity)));
				val = s::getText;
				edit = s;
			} else {
				JComboBox<Object> s= new JComboBox<>();
				Object[] items;
				try (Session session = connector.openSession()) {
					items = session.createQuery("from " + f.getType().getSimpleName(), f.getType())
							.list().toArray();
				}
				s.setModel(new DefaultComboBoxModel<>(items));
				s.setSelectedItem(f.getGetter().apply(entity));
				val = s::getSelectedItem;
				edit = s;
			}
			GridBagConstraints g = new GridBagConstraints();
			g.gridx = 0;
			g.gridy = i;
			g.fill = GridBagConstraints.BOTH;
			g.insets = new Insets(3, 3, 3, 3);
			grid.add(label, g);
			g.gridx = 1;
			grid.add(edit, g);
		}
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        grid = new javax.swing.JPanel();
        saveButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        title = new javax.swing.JLabel();

        getContentPane().setLayout(new java.awt.GridBagLayout());

        grid.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        getContentPane().add(grid, gridBagConstraints);

        saveButton.setText("Opslaan");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_START;
        getContentPane().add(saveButton, gridBagConstraints);

        cancelButton.setText("Terug");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_START;
        getContentPane().add(cancelButton, gridBagConstraints);

        title.setText("Bewerken:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        getContentPane().add(title, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

	@SuppressWarnings("unchecked")
    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        List<Crud<E>.Field<?>> fields = crud.getFields();
		for(int i = 0; i < fields.size(); i++) {
			Crud<E>.Field<?> f = fields.get(i);
			if(f.getSetter() == null)
				continue;
			((BiConsumer<E, Object>)f.getSetter()).accept(entity, (Object) this.supplier[i].get()); // Safe
		}
		try(Session s = connector.openSession()) {
			s.update(entity);
		}
		cancelButtonActionPerformed(evt);
    }//GEN-LAST:event_saveButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JPanel grid;
    private javax.swing.JButton saveButton;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables
}
